<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture_clients.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>